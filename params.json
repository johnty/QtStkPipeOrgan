{"name":"QtStkPipeOrgan","tagline":"Realtime Pipe Organ Implementation in STK","body":"# A Realtime Pipe Organ Instrument using QT and STK\r\n\r\nJohnty Wang (johnty.wang@mail.mcgill.ca)\r\n\r\nProject Report for MUMT618, Fall 2015. \r\n\r\nInstructor: Prof. Gary Scavone\r\n\r\n\r\n##Introduction\r\n\r\n* This project report describes the implementation of a pipe organ instrument in C++ using the Stk, RtAudio and QT libraries. \r\n\r\n* The goal is a cross-platform C++ GUI application that simulates basic types of common organ pipes, the: flue and reed.\r\n\r\n* The instrument appears as a virtual MIDI device that can be controlled by hardware controllers: note-on/off messages control pitches while program changes allow toggling of stops. \r\n\r\n* Using a single MIDI keyboard, the behaviour of a small chamber organ can be simulated. \r\n\r\n* The rest of the report consists of the following sections: \r\n\t1. An introduction and background on the physical layout and relevant parts of a pipe organ. \r\n\t2. A discussion on how various parts of the organ may be modelled.\r\n\t3. Implementation details of the C++ application so far.\r\n\r\n\t![Ryerson Organ](img/ryerson.jpg)\r\n\t\r\n\tThe organ at Ryerson United Church, Vancouver BC\r\n\r\n---\r\n##Background\r\n\r\n* Despite having a chromatic keyboard, the organ is a wind instrument and very different to most keyboard instruments. (One other exception is the accordion!)\r\n\r\n* Unlike other wind instruments, the air is not supplied by the player directly. Traditionally created using manual bellows; nowadays digital blowers.\r\n![organ bellows](https://upload.wikimedia.org/wikipedia/commons/d/d7/HalberstadtBurchardiChurchBellows.jpg)\r\n(img src: wikipedia)\r\n\r\n* Air is fed into banks of pipes that produce sound.\r\n\r\n###Flue and Reed Pipes\r\n\r\nThere are two main kinds of pipes on an organ.\r\n\r\n####Flue Pipes\r\n\r\n* The flue pipe is somewhat similar in operation to a flute (or perhaps more appropriately, a recorder)\r\n![flue pipes](https://upload.wikimedia.org/wikipedia/commons/0/01/PSM_V40_D651_Flue_stop_organ_pipes.jpg)\r\n\r\n\t(Clarke 1877)\r\n\t\r\n* Frequency is tuned by length of pipe\r\n* Typically metal (usually cylindrical) or wood (often rectangular)\r\n![pipe shapes](img/pipeshapes.jpg)\r\n(Clarke 1877)\r\n\r\n####Reed Pipes\r\n* The reed pipe is more like a clarinet (or very large single reed harmonica, perhaps).\r\n![wind chest](img/reedpipe.jpg)\r\n\r\n(Clarke 1877)\r\n\r\n* The pipes are grouped together in a row (called \"stops\" or \"ranks\"), and connected to the air source or \"wind chest\".\r\n\r\n![wind chest](img/windchests.png)\r\n![cross sectional](img/windchests2.png)\r\n\r\n(Clarke 1877)\r\n\r\n* If a stop is active, there is a mechanical (or electrical) link between the keyboard note, and the valve associated with a particular pipe.\r\n\r\n* Stops that are \"unique\" to the instrument are called principles, while others often bear the names of instruments the stop is supposed to imitate.\r\n\r\n* A large church organ can have thousands of pipes. (e.g. St Andrews & St Paul, Montreal: ~7000 pipes!)\r\n\r\n###Adjusting the Sound\r\n\r\n* Control of individual pipe by adjusting its physical parameters (Voicing)\r\n\r\n* Choosing combinations of stops to be used (Registration)\r\n\r\n###Control System/Inputs\r\n\r\nKeyboard: 6 octaves of chromatic notes,. Set of 3-6 depending on instrument. Referred to as manuals.\r\n\r\nPedalboard: 1 ~ 3 octaves of chromatic notes, activated by the foot. Traditionally assigned to large, bass pipes.\r\n\r\nStops: draw tabs that activate each set of pipes\r\n\r\nFoot switches: discrete buttons for activating settings, swell shutters that control volume by adjusting blinds in which certain pipes are housed\r\n\r\nTraditionally, everything is linked mechanically (Tracker organs).\r\n\r\n![Tracker Organ](https://upload.wikimedia.org/wikipedia/commons/9/9b/Pipe_organ_tracker_action.jpg)\r\n\r\n\r\nMost modern organs are digitally controlled. Allows more flexible coupling, and quick recall of complex combinations.\r\n\r\n![Holy Trinity Organ Console](https://upload.wikimedia.org/wikipedia/commons/7/74/Organ_Console%2C_Holy_Trinity%2C_Buffalo.jpeg)\r\n\r\n(Organ console at Holy Trinity, Buffalo. src: wikipedia)\r\n\r\n####*The Organ is probably the world's first \"synthesizer\"*\r\n\r\n####*Can \"fully reproduce\" a performance from recorded signals*\r\n\r\n## Components that may be of interest for Modelling\r\n\r\n* Pipes: physical response of the different kinds of pipes (geometry, materials)\r\n\r\n* Interaction between pipes (e.g. detuned sets of stops for tremolo effects)\r\n\r\n* Imperfections due to environment conditions (e.g. temperature fluctuations)\r\n \r\n* Air source: fluctuations in air pressure; physical limits of blowers, tracker actuation\r\n\r\n* Control system: coupling, mapping of manuals to different registers\r\n\r\n* Reverberance of spaces\r\n\r\n## Commercial Products\r\n\r\nOne of the more famous virtual software organ systems is [Hauptwerk](https://www.hauptwerk.com/learn-more/overview/). It has an extensive sample-based library of many organs.\r\n\r\n\r\n###Implementation\r\n\r\nQT Application: cross platform C++ development environment\r\n\r\n* User interface for basic control, visual feedback of status\r\n* MIDI interface for \r\n* Synthesis module for producing sound, managing voices\r\n\r\n![test ](img/system.png)\r\n\r\n###Synthesis: Organ Model\r\n\r\nAs described in the previous section, there are two main categories of organ pipes: the flue and the reed.\r\n\r\nA first-pass attempt at putting something together, given the existing models in Stk might look like:\r\n\r\n![keyboard flutes?](img/keyboard-flutes.png)\r\n\r\nOr, if we're looking at reed pipes:\r\n\r\n![keyboard clarinets?](img/keyboard-clarinet.png)\r\n\r\n\r\n\r\n###Realtime Audio/MIDI Considerations\r\n\r\n* ASIO drivers were used (in the Windows version) for RtAudio DAC\r\n\r\n* 512 buffer size was used. This means at 44100kHz sample rate, we need to compute the 512 samples every ~11ms (also the system latency)\r\n\r\n* Will affect upper limit of polyphony\r\n\r\n* A very crude sine wave test was done as a \"stress test\":\r\n\t* ~500 waves on i5 Mobile CPU\r\n\t* ~900 waves on i5 Desktop CPU\r\n\r\n* Actual synthesis is more computationally extensive, but this gives a good ballpark idea\r\n\r\n* RtMIDI for MIDI Input. If using as a soft instrument, virtual inputs possible (OSX/Linux), loopMidi on Windows\r\n\r\n###Demonstration\r\n\r\n![broken](https://davidcmoisan.files.wordpress.com/2011/09/clippy-bluescreen-copy_thumb.png?w=662&h=529)\r\n\r\n###Further Development\r\n\r\n* Try modelling different pipe shapes, creating more groups of stops\r\n\r\n* Modelling other effects such as swell boxes, reverb of different spaces\r\n\r\n* Use with more controllers, so multiple stops can be played concurrently on each controller\r\n\r\n* Control with non-keyboard controllers\r\n\r\n###References\r\n\r\nD. Baker. The Organ : a Brief Guide to its Construction, History, Usage and Music. 1991.\r\n\r\nW. H. Clarke. An Outline of the Structure of the Pipe Organ. Oliver Ditson & Co. Boston. 1877.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}